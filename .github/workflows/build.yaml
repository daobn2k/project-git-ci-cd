#để thưucj hiện demo cần test build run 2 file docker tại client và server trước ,, test docker compose file 

# tạo name cho thằng action githubs
  name: project-git-ci-cd
# tạo sự kiện khi push vào 1 branches a ,b c nào đó 
  on:
    push:
      branches: [ main ]
# tạo ra chuỗi công việc  vd docker build ,push , deploy notification ....
  jobs:
  # tên work
    docker:
      # runners là môi trường sẽ chạy work
      runs-on: ubuntu-latest
      # các action đc chạy theo 1 chuỗi từ trên xuống dưới 
      steps:
        # name : tên step con trong chuỗi trong chuỗi sự kiện, uses: sử dụng các webhook event để thực hiện 1 hđ gì đó mà đc cho phép

        # check repo 
        - name: Checkout
          uses: actions/checkout@v2
        # check login docker --> tạo 2 serect trong account setting profile --> tương ứng user name và Token password ở docker hub
        - name: Docker Login
          uses: docker/login-action@v1
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
        # set up build docker --> return ra buildx id là kết quả sau khi build
        - name: SETUP DOCKER BUILD
          uses: docker/setup-buildx-action@v1
          id: buildx
        # sử dụng action push của docker để push lên docker hub sử dụng ouput của step buildx
        - name: Build and PUSH DOCKER IMAGE SERVER
          uses: docker/build-push-action@v2
          with: 
            context: ./backend
            file: ./backend/Dockerfile
            builder: ${{ steps.buildx.outputs.name }}
            push: true
            tags: ${{ secrets.DOCKERHUB_USERNAME }}/backend-prod
        # tương tự bước trên nhưng mà là client step push
        - name: Build and PUSH DOCKER IMAGE CLIENT SERVER
          uses: docker/build-push-action@v2
          with: 
            context: ./client
            file: ./client/Dockerfile
            builder: ${{ steps.buildx.outputs.name }}
            push: true
            tags: ${{ secrets.DOCKERHUB_USERNAME }}/client-prod
        # step này đơn giản là show ra 1 string text sau 1 chuỗi sự kiện ở trên
        - name: Verify
          run: echo "Thành công rồi"
    # deploy:
    # # chỗ này có thể có hoặc ko needs là chờ 1 job nào đó xong r làm tiếp
    #   needs: docker
    #   runs-on: ubuntu-latest
    #   # cấp quyền để chạy scripts
    #   permissions:
    #     packages: write
    #     contents: read
      
    #   steps:
    #   # tạo 1 step deploy
    #     - name: Deploy
    #       uses: appleboy/ssh-action@master
    #       with:
    # # cấu hình connect to server
    #           host: ${{ secrets.BUILD_HOSTING_NAME }}
    #           username: ${{ secrets.BUILD_USER_NAME }}
    #           password: ${{ secrets.BUILD_SSH_PASSWORD}}
    #           port: 22
    #           script_stop: true
    #           # script connect -> trỏ đến folder project-git-ci-cd -> pull new code --> run docker compose up -d --build để run code mới trên server
    #           script: |
    #             echo "connect to server successfully"
    #             sudo su
    #             cd project-git-ci-cd
    #             git pull
    #             docker compose down  
    #             docker compose up -d --build
    #             echo "Deploy đã xong"
    # notification:
    #   needs: deploy
    #   runs-on: ubuntu-latest

    #   steps:
    #     - name:
    #       uses: appleboy/discord-action@master
    #       with:
    #         webhook_id: ${{ secrets.WEBHOOK_ID }}
    #         webhook_token: ${{ secrets.WEBHOOK_TOKEN }}
    #         args: The ${{ github.event_name }} event triggered first step.
    #         run: echo " ĐÃ THÀNH CÔNG"